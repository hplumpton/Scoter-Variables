m30$aic
m31<-glm.nb(Count~sco2$sedmob2 + sco2$sednum, data=sco2)
m31$aic
m32<-glm.nb(Count~sco2$sednum, data=sco2)
m32$aic
?predict.glm
topm=predict(m1, sco2)
plot(topm)
names(topm)
plot(topm, type="l")
topm=predict(m10, sco2)
plot(topm, type="l", lwd=2, xlab="b")
plot(topm, type="l", lwd=1, xlab="b")
topm=predict.glm(m10, sco2)
plot(topm, type="l", lwd=1, xlab="b")
names(topm)
names(transect)
transect=readShapeLines("Layers/transects/WinterSurvey_TrackLines_sCoast.shp")
proj4string(transect)<-CRS("+proj=longlat +datum=WGS84")
map<-plot(transect)
tranbox<-make_bbox(lon=scoters$latitude_dd, lat = scoters$longitude_dd,
f=.01)
library(GISTools)
library(RgoogleMaps)
tranbox<-make_bbox(lon=scoters$latitude_dd, lat = scoters$longitude_dd,
f=.01)
library(ggmap)
tranbox<-make_bbox(lon=scoters$latitude_dd, lat = scoters$longitude_dd,
f=.01)
map<-get_map(location=tranbox, maptype = "terrain", source = 'google',
color='color')
mapscot<-data.frame(scoters)
p1<-ggmap(map)+
geom_point(data=mapscot, aes(x=latitude_dd, y=longitude_dd,
size=Count, shape=2))
p1
as.factor(mapscot$Count)
p1<-ggmap(map)+
geom_point(data=mapscot, aes(x=latitude_dd, y=longitude_dd,
size=Count, shape=2))
p1
mapscot$Count=as.factor(mapscot$Count)
mapscot=is.factor(mapscot)
mapscot
names(mapscot)
mapscot<-data.frame(scoters)
names(mapscot)
p1<-ggmap(map)+
geom_point(data=mapscot$Count, aes(x=latitude_dd, y=longitude_dd,
size=Count, shape=2))
mapscot$Count=as.factor(mapscot$Count)
p1<-ggmap(map)+
geom_point(data=mapscot$Count, aes(x=latitude_dd, y=longitude_dd,
size=Count, shape=2))
scoters=read.csv("ObsData2.csv",header=TRUE)
scoters <-na.omit(scoters)
p1<-ggmap(map)+
geom_point(data=scoter$Count, aes(x=latitude_dd, y=longitude_dd,
size=Count, shape=2))
p1<-ggmap(map)+
geom_point(data=scoters$Count, aes(x=latitude_dd, y=longitude_dd,
size=Count, shape=2))
p1<-ggmap(map)+
geom_point(data=scoters, aes(x=latitude_dd, y=longitude_dd,
size=Count, shape=2))
p1
names(scoters)
scoters=is.factor(scoters$SurveyId)
scoters=read.csv("ObsData2.csv",header=TRUE)
scoters <-na.omit(scoters)
scoters$SurveyId=is.factor(scoters$SurveyId)
scoters$SurveyId
scoters$SurveyBeginMonth=is.factor(scoters$SurveyBeginMonth)
scoters$SurveyBeginMonth
scoters$SurveyBeginMonth=as.factor(scoters$SurveyBeginMonth)
p1<-ggmap(map)+
geom_point(data=scoters, aes(x=latitude_dd, y=longitude_dd,
size=Count, shape=2))
p1
scoters$SurveyBeginYear=is.factor(scoters$SurveyBeginYear)
scoters$SurveyBeginYear
scoters$SurveyBeginYear=as.factor(scoters$SurveyBeginYear)
p1<-ggmap(map)+
geom_point(data=scoters, aes(x=latitude_dd, y=longitude_dd,
size=Count, shape=2))
p1
scoters$Season=is.factor(scoters$Season)
scoters$Season
scoters$dateFlown=is.factor(scoters$dateFlown)
scoters$dateFlown
scoters$seat=is.factor(scoters$seat)
scoters$seat
scoters$crewId=is.factor(scoters$crewId)
scoters$crewId
scoters$SurveyBeginMonth=as.factor(scoters$SurveyBeginMonth)
scoters$SurveyBeginYear=as.factor(scoters$SurveyBeginYear)
scoters$crewId=as.factor(scoters$crewId)
p1<-ggmap(map)+
geom_point(data=scoters, aes(x=latitude_dd, y=longitude_dd,
size=Count, shape=2))
p1
scoters$obs=is.factor(scoters$obs)
scoters$obs
scoters$Transect=is.factor(scoters$Transect)
scoters$Transect
scoters$replicateNum=is.factor(scoters$replicateNum)
scoters$replicateNum
scoters=read.csv("ObsData2.csv",header=TRUE)
scoters <-na.omit(scoters)
scoters<-data.frame(scoters)
p1<-ggmap(map)+
geom_point(data=scoters, aes(x=latitude_dd, y=longitude_dd,
size=Count, shape=2))
p1
scoters$SurveyBeginMonth=as.factor(scoters$SurveyBeginMonth)
scoters$SurveyBeginYear=as.factor(scoters$SurveyBeginYear)
scoters$crewId=as.factor(scoters$crewId)
scoters$replicateNum=as.factor(scoters$replicateNum)
p1<-ggmap(map)+
geom_point(data=scoters, aes(x=latitude_dd, y=longitude_dd,
size=Count, shape=2))
p1
scoters$SurveyBand=is.factor(scoters$SurveyBand)
scoters$SurveyBand
scoters$SurveyBand=is.factor(scoters$)
scoters$ConditionCode=is.factor(scoters$ConditionCode)
scoters$ConditionCode
scoters$ConditionCode=as.factor(scoters$ConditionCode)
p1<-ggmap(map)+
geom_point(data=scoters, aes(x=latitude_dd, y=longitude_dd,
size=Count, shape=2))
p1
scoters$latitude_dd=is.factor(scoters$latitude_dd)
scoters$latitude_dd
scoters$longitude_dd=is.factor(scoters$longitude_dd)
scoters$longitude_dd
scoters$time_secs=is.factor(scoters$time_secs)
scoters$time_secs
scoters$time_secs=as.factor(scoters$time_secs)
p1<-ggmap(map)+
geom_point(data=scoters, aes(x=latitude_dd, y=longitude_dd,
size=Count, shape=2))
p1
scoters$gpsError=is.factor(scoters$gpsError)
scoters$gpsError
scoters$gpsError=as.factor(scoters$gpsError)
scoters$SurveyBeginMonth=as.factor(scoters$SurveyBeginMonth)
scoters$SurveyBeginYear=as.factor(scoters$SurveyBeginYear)
scoters$crewId=as.factor(scoters$crewId)
scoters$replicateNum=as.factor(scoters$replicateNum)
scoters$ConditionCode=as.factor(scoters$ConditionCode)
scoters$latitude_dd=as.factor(scoters$latitude_dd)
scoters$longitude_dd=as.factor(scoters$longitude_dd)
scoters$time_secs=as.factor(scoters$time_secs)
scoters$gpsError=as.factor(scoters$gpsError)
p1<-ggmap(map)+
geom_point(data=scoters, aes(x=latitude_dd, y=longitude_dd,
size=Count, shape=2))
p1
scoters$speciesId=is.factor(scoters$speciesId)
scoters$speciesId
scoters$Count=is.factor(scoters$Count)
scoters$Count
tranbox<-make_bbox(lon=scoters$latitude_dd, lat = scoters$longitude_dd,
f=.01)
scoters=read.csv("ObsData2.csv",header=TRUE)
scoters <-na.omit(scoters)
scoters<-data.frame(scoters)
tranbox<-make_bbox(lon=scoters$latitude_dd, lat = scoters$longitude_dd,
f=.01)
map<-get_map(location=tranbox, maptype = "terrain", source = 'google',
color='color')
scoters$SurveyBeginMonth=as.factor(scoters$SurveyBeginMonth)
scoters$SurveyBeginYear=as.factor(scoters$SurveyBeginYear)
scoters$crewId=as.factor(scoters$crewId)
scoters$replicateNum=as.factor(scoters$replicateNum)
scoters$ConditionCode=as.factor(scoters$ConditionCode)
scoters$latitude_dd=as.factor(scoters$latitude_dd)
scoters$longitude_dd=as.factor(scoters$longitude_dd)
scoters$gpsError=as.factor(scoters$gpsError)
scoters$time_secs=as.factor(scoters$time_secs)
scoters$Count=as.factor(scoters$Count)
p1<-ggmap(map)+
geom_point(data=scoters, aes(x=latitude_dd, y=longitude_dd,
size=Count, shape=2))
p1
library(GISTools)
library(RgoogleMaps)
library(ggmap)
scoters=read.csv("ObsData2.csv",header=TRUE)
scoters <-na.omit(scoters)
scoters<-data.frame(scoters)
tranbox<-make_bbox(lon=scoters$latitude_dd, lat = scoters$longitude_dd,
f=.01)
map<-get_map(location=tranbox, maptype = "terrain", source = 'google',
color='color')
p1<-ggmap(map)
p1
p1<-ggmap(map)+
geom_point()
p1
p1<-ggmap(map)+
geom_point(data = scoters)
p1
tranbox<-make_bbox(lon=scoters$latitude_dd, lat = scoters$longitude_dd,
f=.01)
map<-get_map(location=tranbox, maptype = "terrain", source = 'google',
color='color')
p1<-ggmap(map)+
geom_point(data = scoters)
p1
p1<-ggmap(map)+
geom_point(data = scoters$Count)
tranbox<-make_bbox(lon=scoters$longitude_dd, lat = scoters$latitude_dd
f=.01)
map<-get_map(location=tranbox, maptype = "terrain", source = 'google',
color='color')
p1<-ggmap(map)+
geom_point(data = scoters$Count)
p1<-ggmap(map)+
geom_point(data = scoters)
p1
tranbox<-make_bbox(lon=scoters$longitude_dd, lat = scoters$latitude_dd,
f=.01)
map<-get_map(location=tranbox, maptype = "terrain", source = 'google',
color='color')
p1<-ggmap(map)+
geom_point(data = scoters)
p1
p1<-ggmap(map)+
geom_point(data = scoters, aes(scoters$longitude_dd,
scoters$latitude_dd))
p1
p1<-ggmap(map)+
geom_point(data = scoters, aes(scoters$longitude_dd,
scoters$latitude_dd,
size=Affect))
p1
p1<-ggmap(map)+
geom_point(data = scoters, aes(scoters$longitude_dd,
scoters$latitude_dd,
size=Count))
p1
p1<-ggmap(map)+
geom_point(data = scoters, aes(scoters$longitude_dd,
scoters$latitude_dd,
size=Count)) +
geom_line(data=transect)
p1
p1<-ggmap(map)+
geom_point(data = scoters, aes(scoters$longitude_dd,
scoters$latitude_dd,
size=Count))
p1
p1<-geom_line(data=transect)
p1
names(transect)
p1<-geom_point(data=transect)
p1
tran2=spTransform(transect,
CRS("+proj=aea +lat_1=29.5 +lat_2=45.5 +lat_0=23 +lon_0=-96 +x_0=0.0 +y_0=0.0 +ellps=GRS80 +units=m +datum=NAD83 +no_defs +towgs84=0,0,0"))
tran.sub=tran2[!duplicated(tran2$Transect),] #subset to remove duplicates
tran.sub$id=seq(1,544) #add a unique ID to each transect
transect.locs=coordinates(tran.sub)[[1]][[1]]
ntransect=length(unique(tran.sub$id))
new.line=list(Line(coords=transect.locs))
new.lines=list(Lines(new.line,ID=1))
for(i in 2:ntransect){
new.line=list(Line(coords=coordinates(tran.sub)[[i]][[1]]))
new.lines[[i]]=Lines(new.line,ID=i)
}
p1<-geom_line(data=new.lines)
proj4string(new.lines)<-CRS("+proj=longlat +datum=WGS84")
new.lines=spTransform(new.lines,CRS("+proj=longlat +datum=WGS84"))
p1<-geom_line(data=new.lines)
transect=readShapeLines("Layers/transects/WinterSurvey_TrackLines_sCoast.shp")
proj4string(transect)<-CRS("+proj=longlat +datum=WGS84")
p1<-geom_line(transect)
p1<-geom_line(data=transect)
p1
names(transect)
head(transect)
p1<-geom_line(data=transect$Transect)
p1<-geom_line(data=transect, aes(transect$Transect))
p1
tran2=spTransform(transect,
CRS("+proj=aea +lat_1=29.5 +lat_2=45.5 +lat_0=23 +lon_0=-96 +x_0=0.0 +y_0=0.0 +ellps=GRS80 +units=m +datum=NAD83 +no_defs +towgs84=0,0,0"))
tran.sub=tran2[!duplicated(tran2$Transect),] #subset to remove duplicates
tran.sub$id=seq(1,544) #add a unique ID to each transect
transect.locs=coordinates(tran.sub)[[1]][[1]]
ntransect=length(unique(tran.sub$id))
new.line=list(Line(coords=transect.locs))
new.lines=list(Lines(new.line,ID=1))
for(i in 2:ntransect){
new.line=list(Line(coords=coordinates(tran.sub)[[i]][[1]]))
new.lines[[i]]=Lines(new.line,ID=i)
}
sl <- SpatialLines(list(Lines(list(Line(coords = transect.locs)),
ID = "1"), Lines(list(Line(coords = tran2)),ID = "2")))
tran2=spTransform(transect,
CRS("+proj=aea +lat_1=29.5 +lat_2=45.5 +lat_0=23 +lon_0=-96 +x_0=0.0 +y_0=0.0 +ellps=GRS80 +units=m +datum=NAD83 +no_defs +towgs84=0,0,0"))
tran.sub=tran2[!duplicated(tran2$Transect),] #subset to remove duplicates
tran.sub$id=seq(1,544) #add a unique ID to each transect
#this just uses transect 1 as an example
x0=coordinates(tran.sub)[[1]][[1]][1,1]
x1=coordinates(tran.sub)[[1]][[1]][90,1]
y0=coordinates(tran.sub)[[1]][[1]][1,2]
y1=coordinates(tran.sub)[[1]][[1]][90,2]
lines=data.frame(label=1,x0=x0,x1=x1,y0=y0,y1=y1)
tmp=as.psp(tran.sub[tran.sub$id==1,])
strtransect<-lines_to_strips(lines,as.owin(tmp), width=250)
plot(tran.sub[tran.sub$id==1,])
points(strtransect$full.transects[[1]])
library(DSpat)
library(GISTools)
library(spatstat)
tran2=spTransform(transect,
CRS("+proj=aea +lat_1=29.5 +lat_2=45.5 +lat_0=23 +lon_0=-96 +x_0=0.0 +y_0=0.0 +ellps=GRS80 +units=m +datum=NAD83 +no_defs +towgs84=0,0,0"))
tran.sub=tran2[!duplicated(tran2$Transect),] #subset to remove duplicates
tran.sub$id=seq(1,544) #add a unique ID to each transect
#this just uses transect 1 as an example
x0=coordinates(tran.sub)[[1]][[1]][1,1]
x1=coordinates(tran.sub)[[1]][[1]][90,1]
y0=coordinates(tran.sub)[[1]][[1]][1,2]
y1=coordinates(tran.sub)[[1]][[1]][90,2]
lines=data.frame(label=1,x0=x0,x1=x1,y0=y0,y1=y1)
tmp=as.psp(tran.sub[tran.sub$id==1,])
strtransect<-lines_to_strips(lines,as.owin(tmp), width=250)
plot(tran.sub[tran.sub$id==1,])
points(strtransect$full.transects[[1]])
CreateSegment <- function(coords, from, to) {
distance <- 0
coordsOut <- c()
biggerThanFrom <- F
for (i in 1:(nrow(coords) - 1)) {
d <- sqrt((coords[i, 1] - coords[i + 1, 1])^2 + (coords[i, 2] - coords[i +
1, 2])^2)
distance <- distance + d
if (!biggerThanFrom && (distance > from)) {
w <- 1 - (distance - from)/d
x <- coords[i, 1] + w * (coords[i + 1, 1] - coords[i, 1])
y <- coords[i, 2] + w * (coords[i + 1, 2] - coords[i, 2])
coordsOut <- rbind(coordsOut, c(x, y))
biggerThanFrom <- T
}
if (biggerThanFrom) {
if (distance > to) {
w <- 1 - (distance - to)/d
x <- coords[i, 1] + w * (coords[i + 1, 1] - coords[i, 1])
y <- coords[i, 2] + w * (coords[i + 1, 2] - coords[i, 2])
coordsOut <- rbind(coordsOut, c(x, y))
break
}
coordsOut <- rbind(coordsOut, c(coords[i + 1, 1], coords[i + 1,
2]))
}
}
return(coordsOut)
}
#now create multiple segments building on last function
CreateSegments <- function(coords, length = 0, n.parts = 0) {
stopifnot((length > 0 || n.parts > 0))
# calculate total length line
total_length <- 0
for (i in 1:(nrow(coords) - 1)) {
d <- sqrt((coords[i, 1] - coords[i + 1, 1])^2 + (coords[i, 2] - coords[i +
1, 2])^2)
total_length <- total_length + d
}
# calculate stationing of segments
if (length > 0) {
stationing <- c(seq(from = 0, to = total_length, by = length), total_length)
} else {
stationing <- c(seq(from = 0, to = total_length, length.out = n.parts),
total_length)
}
# calculate segments and store in list
newlines <- list()
for (i in 1:(length(stationing) - 1)) {
newlines[[i]] <- CreateSegment(coords, stationing[i], stationing[i +
1])
}
return(newlines)
}
tran2=coordinates(tran.sub)[[2]][[1]]
sl <- SpatialLines(list(Lines(list(Line(coords = transect.locs)),
ID = "1"), Lines(list(Line(coords = tran2)),ID = "2")))
transect=length(unique(tran.sub$id))
new.line=list(Line(coords=transect.locs))
new.lines=list(Lines(new.line,ID=1))
for(i in 2:ntransect){
new.line=list(Line(coords=coordinates(tran.sub)[[i]][[1]]))
new.lines[[i]]=Lines(new.line,ID=i)
}
sp.out=SpatialLines(new.lines,CRS("+proj=aea +lat_1=29.5 +lat_2=45.5 +lat_0=23 +lon_0=-96 +x_0=0.0 +y_0=0.0 +ellps=GRS80 +units=m +datum=NAD83 +no_defs +towgs84=0,0,0"))
p1<-geom_line(data=sp.out)
p1<-ggmap(map)+
geom_point(data = scoters, aes(scoters$longitude_dd,
scoters$latitude_dd,
size=Count))
p1
p1<-geom_line(transect)
p1<-geom_line(transect aes())
p1<-geom_line(transect, aes())
transect=readShapeLines("Layers/transects/WinterSurvey_TrackLines_sCoast.shp")
proj4string(transect)<-CRS("+proj=longlat +datum=WGS84")
p1<-geom_line(transect)
p1<-geom_line(transect, aes(x=transect$Transect, y=transect$Transect))
p1
p1<-geom_line(data=transect, aes(x=transect$Transect, y=transect$Transect))
p1
?geom_line
p1<-ggmap(map)+
geom_point(data = scoters, aes(scoters$longitude_dd,
scoters$latitude_dd,
size=Count))
p1+geom_line(data=transect, aes(x=transect$Transect, y=transect$Transect))
p1+geom_line(data=transect, aes(x,y))
p1+geom_line(data=transect, aes())
transect=readShapeLines("Layers/transects/WinterSurvey_TrackLines_sCoast.shp")
proj4string(transect)<-CRS("+proj=longlat +datum=WGS84")
scoters=read.csv("ObsData2.csv",header=TRUE)
scoters <-na.omit(scoters)
scoters<-data.frame(scoters)
tranbox<-make_bbox(lon=scoters$longitude_dd, lat = scoters$latitude_dd,
f=.01)
map<-get_map(location=tranbox, maptype = "terrain", source = 'google',
color='color')
p1<-ggmap(map)+
geom_point(data = scoters, aes(scoters$longitude_dd,
scoters$latitude_dd,
size=Count))
p1+geom_line(data=transect, aes())
p1+geom_line(data=transect, aes(x=1, y=transect$Transect))
p1+geom_line(data=transect, aes(x=1, y=1))
p1
p1<-ggmap(map)+
geom_point(data = scoters, aes(scoters$longitude_dd,
scoters$latitude_dd,
size=Count))
p1+geom_line(data=transect, aes(x=1, y=1))
transect=readShapeLines("Layers/transects/WinterSurvey_TrackLines_sCoast.shp")
proj4string(transect)<-CRS("+proj=longlat +datum=WGS84")
p1+geom_line(data=transect, aes(x=1, y=1))
p1<-ggmap(map)+
geom_line(data=transect, aes(x=1, y=1))+
geom_point(data = scoters, aes(scoters$longitude_dd,
scoters$latitude_dd,
size=Count))
p1
p1<-ggmap(map)+
geom_line(data=transect$Transect, aes(x=1, y=1))+
geom_point(data = scoters, aes(scoters$longitude_dd,
scoters$latitude_dd,
size=Count))
p1<-ggmap(map)+
geom_line(data=transect, aes(x=transect$UID, y=1))+
geom_point(data = scoters, aes(scoters$longitude_dd,
scoters$latitude_dd,
size=Count))
p1
p1<-ggmap(map)+
geom_line(data=transect, aes(x=1, y=1))
p1
?geom_line
p1<-ggmap(map)+
geom_line(data=transect, aes(x=transect, y=1))
p1
p1<-ggmap(map)+
geom_line(data=transect, aes())
p1
?geom_line
p1<-ggmap(map)+
geom_line(mapping=NULL, data=transect)
p1
transect=data.frame(transect)
proj4string(transect)<-CRS("+proj=longlat +datum=WGS84")
transect=readShapeLines("Layers/transects/WinterSurvey_TrackLines_sCoast.shp")
proj4string(transect)<-CRS("+proj=longlat +datum=WGS84")
transect=data.frame(transect)
p1<-ggmap(map)+
geom_line(data=transect, aes(x=1, y=1))
geom_point(data = scoters, aes(scoters$longitude_dd,
scoters$latitude_dd,
size=Count))
p1
p1<-ggmap(map)+
geom_line(data=transect, aes(x=1, y=1))+
geom_point(data = scoters, aes(scoters$longitude_dd,
scoters$latitude_dd,
size=Count))
p1
p1<-ggmap(map)+
geom_line(data=transect, aes(x=transect$dateFlown, y=transect$Transect))+
geom_point(data = scoters, aes(scoters$longitude_dd,
scoters$latitude_dd,
size=Count))
p1
p1<-ggmap(map)+
geom_line(data=transect, aes(x=transect$UID, y=transect$Transect))+
geom_point(data = scoters, aes(scoters$longitude_dd,
scoters$latitude_dd,
size=Count))
p1
p1<-ggmap(map)+
geom_line(data=transect, aes(x=1, y=1))+
geom_point(data = scoters, aes(scoters$longitude_dd,
scoters$latitude_dd,
size=Count))
p1
topm=predict.glm(m10, sco2)
plot(topm, type="l", lwd=1, xlab="year", ylab="count")
